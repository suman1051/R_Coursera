## Clear Memory
rm(list=ls())

getwd()
setwd("C:/Users/SUMAN/Desktop/R") # Home
setwd("C:/Users/sumanr/Desktop/Coursera_R/R_Code") # Office 

# Control structure in R - If-else
x<-5

if(x>3){
  y<-10
} else {
  y<-0
}
print(y)

# Control structure in R - For loops

for ( i in 1:10) {
  print(i)
}

x<- c("a","b","c","d")
for ( i in 1:4) {
  print(x[i])
}

for ( i in seq_along(x)){  #sequence generated based on length of the variable x
  print(x[i])
}

x<-matrix(1:6, 2,3)
for ( i in seq_len(nrow(x))) {
  for (j in seq_len(ncol(x))) {
    print(x[i,j])
  }
}

# Control structure in R - While loops

count<-0
while(count < 10){
  print(count)
  count<- count + 1
}

z<- 5
while (z>=3 && z<=10) {
  print(z)
  coin<- rbinom(1,1,0.5)
  if(coin == 1) { ##random walk
    z<- z + 1
  } else {
    z<- z - 1
  }
}



## Control Structure in R - Repeat, Next, Break ##

x0<- 1
tol<- 1e-8

repeat {
  x1<- computeEstimate()  #Error: could not find function "computeEstimate"
  if(abs(x1-x0)<tol) {
    break
  } else {
    x0<-x1
  }
}

for( i in 1:100) {
  if(i<=20) {
    ## skip the first 20 iterations
    next
  }
  ## do something
}

## First R Function ##
add2<- function(x,y) {
  x+y
}

add2(3,7)

above10 <- function(x) {
  use <- x > 10
  x[use]
}

above <- function(x,n = 10){
  use <- x > n
  x[use]
}

x<- 1:20

above(x,12)
above(x)

columnmean <- function(y, removeNA=TRUE) {
  nc <- ncol(y)
  means<- numeric(nc)
  for(i in 1:nc) {
    means[i]<-mean(y[,i],na.rm = removeNA)
  }
  means
}

columnmean(airquality)
columnmean(airquality, FALSE)

